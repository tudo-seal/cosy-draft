name: Perform Checks

on:
  workflow_call:
  push:
    branches:
      - main

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

jobs:
  test-lint-type-coverage:
    name: Python ${{ matrix.python-version }} on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}
    runs-on: ${{ matrix.os }}
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Hatch
      uses: pypa/hatch@install

    - name: Run static analysis
      run: hatch fmt --check

    - name: Run type checks
      run: hatch run types:check

    - name: Run tests
      run: hatch test tests --python ${{ matrix.python-version }} --cov --cov-branch --cov-report=xml --randomize --parallel --junit-xml=report.xml

    - name: Upload Tests to Codecov
      if: ${{ !cancelled() && !contains( github.head_ref, 'hotfix/')}}
      uses: codecov/test-results-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./report.xml
        flags: ${{ matrix.os }}-${{ matrix.python-version }}

    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v5
      if: ${{ !contains( github.head_ref, 'hotfix/') }}
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        flags: ${{ matrix.os }}-${{ matrix.python-version }}